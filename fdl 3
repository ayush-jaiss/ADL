import numpy as np
import pandas as pd

df=pd.read_csv("Admission_Predict.csv")
df.head()

df.columns = df.columns.str.strip()

df.shape

df.info()

df.duplicated().sum()

df['Serial No.'].value_counts()

if 'Chance of Admit' in df.columns:
      X = df.drop(columns=['Chance of Admit'])
      y = df['Chance of Admit']
else:
      print("Column 'Chance of Admit' not found in the dataset.") 
      exit()
print("Shape of X:", X.shape)
print("Shape of y:", y.shape)


from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler 
from tensorflow.keras.models import Sequential 
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1) 
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train) 
X_test = scaler.transform(X_test)

model = Sequential()
model.add(Dense(units=64, activation='relu', input_dim=X_train.shape[1])) model.add(Dense(units=32, activation='relu'))
model.add(Dense(units=1))

model.compile(optimizer=Adam(), loss='mean_squared_error')
history = model.fit(X_train, y_train, epochs=100, validation_split=0.2, verbose=1) 
test_loss = model.evaluate(X_test, y_test, verbose=0)
print(f"Test Loss: {test_loss}")

y_pred = model.predict(X_test)

